// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OfflineService.proto

#include "OfflineService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace ik_OfflineService {
class WriteOfflineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteOfflineRequest> _instance;
} _WriteOfflineRequest_default_instance_;
class ReadOfflineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadOfflineRequest> _instance;
} _ReadOfflineRequest_default_instance_;
class ReadOfflineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadOfflineResponse> _instance;
} _ReadOfflineResponse_default_instance_;
}  // namespace ik_OfflineService
static void InitDefaultsWriteOfflineRequest_OfflineService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_OfflineService::_WriteOfflineRequest_default_instance_;
    new (ptr) ::ik_OfflineService::WriteOfflineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_OfflineService::WriteOfflineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteOfflineRequest_OfflineService_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteOfflineRequest_OfflineService_2eproto}, {}};

static void InitDefaultsReadOfflineRequest_OfflineService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_OfflineService::_ReadOfflineRequest_default_instance_;
    new (ptr) ::ik_OfflineService::ReadOfflineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_OfflineService::ReadOfflineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadOfflineRequest_OfflineService_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadOfflineRequest_OfflineService_2eproto}, {}};

static void InitDefaultsReadOfflineResponse_OfflineService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_OfflineService::_ReadOfflineResponse_default_instance_;
    new (ptr) ::ik_OfflineService::ReadOfflineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_OfflineService::ReadOfflineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadOfflineResponse_OfflineService_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadOfflineResponse_OfflineService_2eproto}, {}};

void InitDefaults_OfflineService_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_WriteOfflineRequest_OfflineService_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadOfflineRequest_OfflineService_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadOfflineResponse_OfflineService_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_OfflineService_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_OfflineService_2eproto = nullptr;
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors_OfflineService_2eproto[1];

const ::google::protobuf::uint32 TableStruct_OfflineService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::WriteOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::WriteOfflineRequest, friend_id_),
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::WriteOfflineRequest, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::ReadOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::ReadOfflineRequest, myid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::ReadOfflineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ik_OfflineService::ReadOfflineResponse, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ik_OfflineService::WriteOfflineRequest)},
  { 7, -1, sizeof(::ik_OfflineService::ReadOfflineRequest)},
  { 13, -1, sizeof(::ik_OfflineService::ReadOfflineResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_OfflineService::_WriteOfflineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_OfflineService::_ReadOfflineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_OfflineService::_ReadOfflineResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_OfflineService_2eproto = {
  {}, AddDescriptors_OfflineService_2eproto, "OfflineService.proto", schemas,
  file_default_instances, TableStruct_OfflineService_2eproto::offsets,
  file_level_metadata_OfflineService_2eproto, 3, file_level_enum_descriptors_OfflineService_2eproto, file_level_service_descriptors_OfflineService_2eproto,
};

const char descriptor_table_protodef_OfflineService_2eproto[] =
  "\n\024OfflineService.proto\022\021ik_OfflineServic"
  "e\032\033google/protobuf/empty.proto\"5\n\023WriteO"
  "fflineRequest\022\021\n\tfriend_id\030\001 \001(\005\022\013\n\003msg\030"
  "\002 \001(\014\"\"\n\022ReadOfflineRequest\022\014\n\004myid\030\001 \001("
  "\005\"\"\n\023ReadOfflineResponse\022\013\n\003msg\030\001 \003(\0142\301\001"
  "\n\021OfflineServiceRpc\022N\n\014WriteOffline\022&.ik"
  "_OfflineService.WriteOfflineRequest\032\026.go"
  "ogle.protobuf.Empty\022\\\n\013ReadOffline\022%.ik_"
  "OfflineService.ReadOfflineRequest\032&.ik_O"
  "fflineService.ReadOfflineResponseB\003\200\001\001b\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_OfflineService_2eproto = {
  false, InitDefaults_OfflineService_2eproto, 
  descriptor_table_protodef_OfflineService_2eproto,
  "OfflineService.proto", &assign_descriptors_table_OfflineService_2eproto, 406,
};

void AddDescriptors_OfflineService_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_OfflineService_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_OfflineService_2eproto = []() { AddDescriptors_OfflineService_2eproto(); return true; }();
namespace ik_OfflineService {

// ===================================================================

void WriteOfflineRequest::InitAsDefaultInstance() {
}
class WriteOfflineRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteOfflineRequest::kFriendIdFieldNumber;
const int WriteOfflineRequest::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteOfflineRequest::WriteOfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.WriteOfflineRequest)
}
WriteOfflineRequest::WriteOfflineRequest(const WriteOfflineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  friend_id_ = from.friend_id_;
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.WriteOfflineRequest)
}

void WriteOfflineRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteOfflineRequest_OfflineService_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_id_ = 0;
}

WriteOfflineRequest::~WriteOfflineRequest() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.WriteOfflineRequest)
  SharedDtor();
}

void WriteOfflineRequest::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteOfflineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteOfflineRequest& WriteOfflineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteOfflineRequest_OfflineService_2eproto.base);
  return *internal_default_instance();
}


void WriteOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.WriteOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteOfflineRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteOfflineRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 friend_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_friend_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteOfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.WriteOfflineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 friend_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.WriteOfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.WriteOfflineRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteOfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.WriteOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 friend_id = 1;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->friend_id(), output);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_OfflineService.WriteOfflineRequest)
}

::google::protobuf::uint8* WriteOfflineRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.WriteOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 friend_id = 1;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->friend_id(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.WriteOfflineRequest)
  return target;
}

size_t WriteOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.WriteOfflineRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // int32 friend_id = 1;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteOfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.WriteOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteOfflineRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WriteOfflineRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.WriteOfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.WriteOfflineRequest)
    MergeFrom(*source);
  }
}

void WriteOfflineRequest::MergeFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.WriteOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
}

void WriteOfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteOfflineRequest::CopyFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteOfflineRequest::IsInitialized() const {
  return true;
}

void WriteOfflineRequest::Swap(WriteOfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteOfflineRequest::InternalSwap(WriteOfflineRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(friend_id_, other->friend_id_);
}

::google::protobuf::Metadata WriteOfflineRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfflineService_2eproto);
  return ::file_level_metadata_OfflineService_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadOfflineRequest::InitAsDefaultInstance() {
}
class ReadOfflineRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOfflineRequest::kMyidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOfflineRequest::ReadOfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.ReadOfflineRequest)
}
ReadOfflineRequest::ReadOfflineRequest(const ReadOfflineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  myid_ = from.myid_;
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.ReadOfflineRequest)
}

void ReadOfflineRequest::SharedCtor() {
  myid_ = 0;
}

ReadOfflineRequest::~ReadOfflineRequest() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.ReadOfflineRequest)
  SharedDtor();
}

void ReadOfflineRequest::SharedDtor() {
}

void ReadOfflineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadOfflineRequest& ReadOfflineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadOfflineRequest_OfflineService_2eproto.base);
  return *internal_default_instance();
}


void ReadOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.ReadOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  myid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadOfflineRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadOfflineRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 myid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_myid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadOfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.ReadOfflineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 myid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.ReadOfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.ReadOfflineRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadOfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.ReadOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 myid = 1;
  if (this->myid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_OfflineService.ReadOfflineRequest)
}

::google::protobuf::uint8* ReadOfflineRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.ReadOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 myid = 1;
  if (this->myid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.ReadOfflineRequest)
  return target;
}

size_t ReadOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.ReadOfflineRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 myid = 1;
  if (this->myid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->myid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadOfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.ReadOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOfflineRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ReadOfflineRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.ReadOfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.ReadOfflineRequest)
    MergeFrom(*source);
  }
}

void ReadOfflineRequest::MergeFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.ReadOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.myid() != 0) {
    set_myid(from.myid());
  }
}

void ReadOfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOfflineRequest::CopyFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineRequest::IsInitialized() const {
  return true;
}

void ReadOfflineRequest::Swap(ReadOfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOfflineRequest::InternalSwap(ReadOfflineRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(myid_, other->myid_);
}

::google::protobuf::Metadata ReadOfflineRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfflineService_2eproto);
  return ::file_level_metadata_OfflineService_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadOfflineResponse::InitAsDefaultInstance() {
}
class ReadOfflineResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOfflineResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOfflineResponse::ReadOfflineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.ReadOfflineResponse)
}
ReadOfflineResponse::ReadOfflineResponse(const ReadOfflineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      msg_(from.msg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.ReadOfflineResponse)
}

void ReadOfflineResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadOfflineResponse_OfflineService_2eproto.base);
}

ReadOfflineResponse::~ReadOfflineResponse() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.ReadOfflineResponse)
  SharedDtor();
}

void ReadOfflineResponse::SharedDtor() {
}

void ReadOfflineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadOfflineResponse& ReadOfflineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadOfflineResponse_OfflineService_2eproto.base);
  return *internal_default_instance();
}


void ReadOfflineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.ReadOfflineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadOfflineResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadOfflineResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated bytes msg = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_msg();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadOfflineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.ReadOfflineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.ReadOfflineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.ReadOfflineResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadOfflineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.ReadOfflineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes msg = 1;
  for (int i = 0, n = this->msg_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->msg(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_OfflineService.ReadOfflineResponse)
}

::google::protobuf::uint8* ReadOfflineResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.ReadOfflineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes msg = 1;
  for (int i = 0, n = this->msg_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->msg(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.ReadOfflineResponse)
  return target;
}

size_t ReadOfflineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.ReadOfflineResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes msg = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->msg_size());
  for (int i = 0, n = this->msg_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->msg(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadOfflineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.ReadOfflineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOfflineResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ReadOfflineResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.ReadOfflineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.ReadOfflineResponse)
    MergeFrom(*source);
  }
}

void ReadOfflineResponse::MergeFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.ReadOfflineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
}

void ReadOfflineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOfflineResponse::CopyFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineResponse::IsInitialized() const {
  return true;
}

void ReadOfflineResponse::Swap(ReadOfflineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOfflineResponse::InternalSwap(ReadOfflineResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.InternalSwap(CastToBase(&other->msg_));
}

::google::protobuf::Metadata ReadOfflineResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OfflineService_2eproto);
  return ::file_level_metadata_OfflineService_2eproto[kIndexInFileMessages];
}


// ===================================================================

OfflineServiceRpc::~OfflineServiceRpc() {}

const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OfflineService_2eproto);
  return file_level_service_descriptors_OfflineService_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc::GetDescriptor() {
  return descriptor();
}

void OfflineServiceRpc::WriteOffline(::google::protobuf::RpcController* controller,
                         const ::ik_OfflineService::WriteOfflineRequest*,
                         ::google::protobuf::Empty*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method WriteOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::ReadOffline(::google::protobuf::RpcController* controller,
                         const ::ik_OfflineService::ReadOfflineRequest*,
                         ::ik_OfflineService::ReadOfflineResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ReadOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_OfflineService_2eproto[0]);
  switch(method->index()) {
    case 0:
      WriteOffline(controller,
             ::google::protobuf::down_cast<const ::ik_OfflineService::WriteOfflineRequest*>(request),
             ::google::protobuf::down_cast< ::google::protobuf::Empty*>(response),
             done);
      break;
    case 1:
      ReadOffline(controller,
             ::google::protobuf::down_cast<const ::ik_OfflineService::ReadOfflineRequest*>(request),
             ::google::protobuf::down_cast< ::ik_OfflineService::ReadOfflineResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& OfflineServiceRpc::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ik_OfflineService::WriteOfflineRequest::default_instance();
    case 1:
      return ::ik_OfflineService::ReadOfflineRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& OfflineServiceRpc::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::google::protobuf::Empty::default_instance();
    case 1:
      return ::ik_OfflineService::ReadOfflineResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
OfflineServiceRpc_Stub::~OfflineServiceRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void OfflineServiceRpc_Stub::WriteOffline(::google::protobuf::RpcController* controller,
                              const ::ik_OfflineService::WriteOfflineRequest* request,
                              ::google::protobuf::Empty* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void OfflineServiceRpc_Stub::ReadOffline(::google::protobuf::RpcController* controller,
                              const ::ik_OfflineService::ReadOfflineRequest* request,
                              ::ik_OfflineService::ReadOfflineResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ik_OfflineService
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ik_OfflineService::WriteOfflineRequest* Arena::CreateMaybeMessage< ::ik_OfflineService::WriteOfflineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_OfflineService::WriteOfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ik_OfflineService::ReadOfflineRequest* Arena::CreateMaybeMessage< ::ik_OfflineService::ReadOfflineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_OfflineService::ReadOfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ik_OfflineService::ReadOfflineResponse* Arena::CreateMaybeMessage< ::ik_OfflineService::ReadOfflineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_OfflineService::ReadOfflineResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
