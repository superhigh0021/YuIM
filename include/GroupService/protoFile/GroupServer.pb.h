// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GroupServer.proto

#ifndef PROTOBUF_INCLUDED_GroupServer_2eproto
#define PROTOBUF_INCLUDED_GroupServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GroupServer_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_GroupServer_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_GroupServer_2eproto();
namespace ik_GroupServer {
class AddGroupRequest;
class AddGroupRequestDefaultTypeInternal;
extern AddGroupRequestDefaultTypeInternal _AddGroupRequest_default_instance_;
class CrateGroupResponse;
class CrateGroupResponseDefaultTypeInternal;
extern CrateGroupResponseDefaultTypeInternal _CrateGroupResponse_default_instance_;
class CreateGroupRequest;
class CreateGroupRequestDefaultTypeInternal;
extern CreateGroupRequestDefaultTypeInternal _CreateGroupRequest_default_instance_;
class GetGroupUsersRequest;
class GetGroupUsersRequestDefaultTypeInternal;
extern GetGroupUsersRequestDefaultTypeInternal _GetGroupUsersRequest_default_instance_;
class GetGroupUsersResponse;
class GetGroupUsersResponseDefaultTypeInternal;
extern GetGroupUsersResponseDefaultTypeInternal _GetGroupUsersResponse_default_instance_;
class QuitGroupRequest;
class QuitGroupRequestDefaultTypeInternal;
extern QuitGroupRequestDefaultTypeInternal _QuitGroupRequest_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
}  // namespace ik_GroupServer
namespace google {
namespace protobuf {
template<> ::ik_GroupServer::AddGroupRequest* Arena::CreateMaybeMessage<::ik_GroupServer::AddGroupRequest>(Arena*);
template<> ::ik_GroupServer::CrateGroupResponse* Arena::CreateMaybeMessage<::ik_GroupServer::CrateGroupResponse>(Arena*);
template<> ::ik_GroupServer::CreateGroupRequest* Arena::CreateMaybeMessage<::ik_GroupServer::CreateGroupRequest>(Arena*);
template<> ::ik_GroupServer::GetGroupUsersRequest* Arena::CreateMaybeMessage<::ik_GroupServer::GetGroupUsersRequest>(Arena*);
template<> ::ik_GroupServer::GetGroupUsersResponse* Arena::CreateMaybeMessage<::ik_GroupServer::GetGroupUsersResponse>(Arena*);
template<> ::ik_GroupServer::QuitGroupRequest* Arena::CreateMaybeMessage<::ik_GroupServer::QuitGroupRequest>(Arena*);
template<> ::ik_GroupServer::Request* Arena::CreateMaybeMessage<::ik_GroupServer::Request>(Arena*);
template<> ::ik_GroupServer::UserInfo* Arena::CreateMaybeMessage<::ik_GroupServer::UserInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ik_GroupServer {

// ===================================================================

class Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(nullptr);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes request_msg = 2;
  void clear_request_msg();
  static const int kRequestMsgFieldNumber = 2;
  const ::std::string& request_msg() const;
  void set_request_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_request_msg(::std::string&& value);
  #endif
  void set_request_msg(const char* value);
  void set_request_msg(const void* value, size_t size);
  ::std::string* mutable_request_msg();
  ::std::string* release_request_msg();
  void set_allocated_request_msg(::std::string* request_msg);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr request_msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class AddGroupRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.AddGroupRequest) */ {
 public:
  AddGroupRequest();
  virtual ~AddGroupRequest();

  AddGroupRequest(const AddGroupRequest& from);

  inline AddGroupRequest& operator=(const AddGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddGroupRequest(AddGroupRequest&& from) noexcept
    : AddGroupRequest() {
    *this = ::std::move(from);
  }

  inline AddGroupRequest& operator=(AddGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AddGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddGroupRequest* internal_default_instance() {
    return reinterpret_cast<const AddGroupRequest*>(
               &_AddGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AddGroupRequest* other);
  friend void swap(AddGroupRequest& a, AddGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddGroupRequest* New() const final {
    return CreateMaybeMessage<AddGroupRequest>(nullptr);
  }

  AddGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddGroupRequest& from);
  void MergeFrom(const AddGroupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.AddGroupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class CreateGroupRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.CreateGroupRequest) */ {
 public:
  CreateGroupRequest();
  virtual ~CreateGroupRequest();

  CreateGroupRequest(const CreateGroupRequest& from);

  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGroupRequest(CreateGroupRequest&& from) noexcept
    : CreateGroupRequest() {
    *this = ::std::move(from);
  }

  inline CreateGroupRequest& operator=(CreateGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGroupRequest*>(
               &_CreateGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CreateGroupRequest* other);
  friend void swap(CreateGroupRequest& a, CreateGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGroupRequest* New() const final {
    return CreateMaybeMessage<CreateGroupRequest>(nullptr);
  }

  CreateGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateGroupRequest& from);
  void MergeFrom(const CreateGroupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes groupname = 2;
  void clear_groupname();
  static const int kGroupnameFieldNumber = 2;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  #if LANG_CXX11
  void set_groupname(::std::string&& value);
  #endif
  void set_groupname(const char* value);
  void set_groupname(const void* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.CreateGroupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  ::google::protobuf::int32 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class CrateGroupResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.CrateGroupResponse) */ {
 public:
  CrateGroupResponse();
  virtual ~CrateGroupResponse();

  CrateGroupResponse(const CrateGroupResponse& from);

  inline CrateGroupResponse& operator=(const CrateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrateGroupResponse(CrateGroupResponse&& from) noexcept
    : CrateGroupResponse() {
    *this = ::std::move(from);
  }

  inline CrateGroupResponse& operator=(CrateGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CrateGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CrateGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CrateGroupResponse*>(
               &_CrateGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CrateGroupResponse* other);
  friend void swap(CrateGroupResponse& a, CrateGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrateGroupResponse* New() const final {
    return CreateMaybeMessage<CrateGroupResponse>(nullptr);
  }

  CrateGroupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CrateGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CrateGroupResponse& from);
  void MergeFrom(const CrateGroupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CrateGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.CrateGroupResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class QuitGroupRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.QuitGroupRequest) */ {
 public:
  QuitGroupRequest();
  virtual ~QuitGroupRequest();

  QuitGroupRequest(const QuitGroupRequest& from);

  inline QuitGroupRequest& operator=(const QuitGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuitGroupRequest(QuitGroupRequest&& from) noexcept
    : QuitGroupRequest() {
    *this = ::std::move(from);
  }

  inline QuitGroupRequest& operator=(QuitGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QuitGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuitGroupRequest* internal_default_instance() {
    return reinterpret_cast<const QuitGroupRequest*>(
               &_QuitGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(QuitGroupRequest* other);
  friend void swap(QuitGroupRequest& a, QuitGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuitGroupRequest* New() const final {
    return CreateMaybeMessage<QuitGroupRequest>(nullptr);
  }

  QuitGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuitGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuitGroupRequest& from);
  void MergeFrom(const QuitGroupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuitGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.QuitGroupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class GetGroupUsersRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.GetGroupUsersRequest) */ {
 public:
  GetGroupUsersRequest();
  virtual ~GetGroupUsersRequest();

  GetGroupUsersRequest(const GetGroupUsersRequest& from);

  inline GetGroupUsersRequest& operator=(const GetGroupUsersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupUsersRequest(GetGroupUsersRequest&& from) noexcept
    : GetGroupUsersRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupUsersRequest& operator=(GetGroupUsersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetGroupUsersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupUsersRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupUsersRequest*>(
               &_GetGroupUsersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetGroupUsersRequest* other);
  friend void swap(GetGroupUsersRequest& a, GetGroupUsersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupUsersRequest* New() const final {
    return CreateMaybeMessage<GetGroupUsersRequest>(nullptr);
  }

  GetGroupUsersRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetGroupUsersRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetGroupUsersRequest& from);
  void MergeFrom(const GetGroupUsersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetGroupUsersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.GetGroupUsersRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class UserInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UserInfo* other);
  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const final {
    return CreateMaybeMessage<UserInfo>(nullptr);
  }

  UserInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ik_GroupServer.UserInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// -------------------------------------------------------------------

class GetGroupUsersResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_GroupServer.GetGroupUsersResponse) */ {
 public:
  GetGroupUsersResponse();
  virtual ~GetGroupUsersResponse();

  GetGroupUsersResponse(const GetGroupUsersResponse& from);

  inline GetGroupUsersResponse& operator=(const GetGroupUsersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupUsersResponse(GetGroupUsersResponse&& from) noexcept
    : GetGroupUsersResponse() {
    *this = ::std::move(from);
  }

  inline GetGroupUsersResponse& operator=(GetGroupUsersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetGroupUsersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupUsersResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupUsersResponse*>(
               &_GetGroupUsersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GetGroupUsersResponse* other);
  friend void swap(GetGroupUsersResponse& a, GetGroupUsersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupUsersResponse* New() const final {
    return CreateMaybeMessage<GetGroupUsersResponse>(nullptr);
  }

  GetGroupUsersResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetGroupUsersResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetGroupUsersResponse& from);
  void MergeFrom(const GetGroupUsersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetGroupUsersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ik_GroupServer.UserInfo users = 1;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 1;
  ::ik_GroupServer::UserInfo* mutable_users(int index);
  ::google::protobuf::RepeatedPtrField< ::ik_GroupServer::UserInfo >*
      mutable_users();
  const ::ik_GroupServer::UserInfo& users(int index) const;
  ::ik_GroupServer::UserInfo* add_users();
  const ::google::protobuf::RepeatedPtrField< ::ik_GroupServer::UserInfo >&
      users() const;

  // @@protoc_insertion_point(class_scope:ik_GroupServer.GetGroupUsersResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ik_GroupServer::UserInfo > users_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GroupServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// bytes type = 1;
inline void Request::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::type() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.Request.type)
  return type_.GetNoArena();
}
inline void Request::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_GroupServer.Request.type)
}
#if LANG_CXX11
inline void Request::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ik_GroupServer.Request.type)
}
#endif
inline void Request::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_GroupServer.Request.type)
}
inline void Request::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_GroupServer.Request.type)
}
inline ::std::string* Request::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ik_GroupServer.Request.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_type() {
  // @@protoc_insertion_point(field_release:ik_GroupServer.Request.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ik_GroupServer.Request.type)
}

// bytes request_msg = 2;
inline void Request::clear_request_msg() {
  request_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::request_msg() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.Request.request_msg)
  return request_msg_.GetNoArena();
}
inline void Request::set_request_msg(const ::std::string& value) {
  
  request_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_GroupServer.Request.request_msg)
}
#if LANG_CXX11
inline void Request::set_request_msg(::std::string&& value) {
  
  request_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ik_GroupServer.Request.request_msg)
}
#endif
inline void Request::set_request_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  request_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_GroupServer.Request.request_msg)
}
inline void Request::set_request_msg(const void* value, size_t size) {
  
  request_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_GroupServer.Request.request_msg)
}
inline ::std::string* Request::mutable_request_msg() {
  
  // @@protoc_insertion_point(field_mutable:ik_GroupServer.Request.request_msg)
  return request_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_request_msg() {
  // @@protoc_insertion_point(field_release:ik_GroupServer.Request.request_msg)
  
  return request_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_request_msg(::std::string* request_msg) {
  if (request_msg != nullptr) {
    
  } else {
    
  }
  request_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_msg);
  // @@protoc_insertion_point(field_set_allocated:ik_GroupServer.Request.request_msg)
}

// -------------------------------------------------------------------

// AddGroupRequest

// int32 userid = 1;
inline void AddGroupRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 AddGroupRequest::userid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.AddGroupRequest.userid)
  return userid_;
}
inline void AddGroupRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.AddGroupRequest.userid)
}

// int32 groupid = 2;
inline void AddGroupRequest::clear_groupid() {
  groupid_ = 0;
}
inline ::google::protobuf::int32 AddGroupRequest::groupid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.AddGroupRequest.groupid)
  return groupid_;
}
inline void AddGroupRequest::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.AddGroupRequest.groupid)
}

// -------------------------------------------------------------------

// CreateGroupRequest

// int32 userid = 1;
inline void CreateGroupRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CreateGroupRequest::userid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.CreateGroupRequest.userid)
  return userid_;
}
inline void CreateGroupRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.CreateGroupRequest.userid)
}

// bytes groupname = 2;
inline void CreateGroupRequest::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::groupname() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.CreateGroupRequest.groupname)
  return groupname_.GetNoArena();
}
inline void CreateGroupRequest::set_groupname(const ::std::string& value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_GroupServer.CreateGroupRequest.groupname)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_groupname(::std::string&& value) {
  
  groupname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ik_GroupServer.CreateGroupRequest.groupname)
}
#endif
inline void CreateGroupRequest::set_groupname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_GroupServer.CreateGroupRequest.groupname)
}
inline void CreateGroupRequest::set_groupname(const void* value, size_t size) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_GroupServer.CreateGroupRequest.groupname)
}
inline ::std::string* CreateGroupRequest::mutable_groupname() {
  
  // @@protoc_insertion_point(field_mutable:ik_GroupServer.CreateGroupRequest.groupname)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_groupname() {
  // @@protoc_insertion_point(field_release:ik_GroupServer.CreateGroupRequest.groupname)
  
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_groupname(::std::string* groupname) {
  if (groupname != nullptr) {
    
  } else {
    
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:ik_GroupServer.CreateGroupRequest.groupname)
}

// -------------------------------------------------------------------

// CrateGroupResponse

// int32 groupid = 1;
inline void CrateGroupResponse::clear_groupid() {
  groupid_ = 0;
}
inline ::google::protobuf::int32 CrateGroupResponse::groupid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.CrateGroupResponse.groupid)
  return groupid_;
}
inline void CrateGroupResponse::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.CrateGroupResponse.groupid)
}

// -------------------------------------------------------------------

// QuitGroupRequest

// int32 userid = 1;
inline void QuitGroupRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 QuitGroupRequest::userid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.QuitGroupRequest.userid)
  return userid_;
}
inline void QuitGroupRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.QuitGroupRequest.userid)
}

// int32 groupid = 2;
inline void QuitGroupRequest::clear_groupid() {
  groupid_ = 0;
}
inline ::google::protobuf::int32 QuitGroupRequest::groupid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.QuitGroupRequest.groupid)
  return groupid_;
}
inline void QuitGroupRequest::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.QuitGroupRequest.groupid)
}

// -------------------------------------------------------------------

// GetGroupUsersRequest

// int32 groupid = 1;
inline void GetGroupUsersRequest::clear_groupid() {
  groupid_ = 0;
}
inline ::google::protobuf::int32 GetGroupUsersRequest::groupid() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.GetGroupUsersRequest.groupid)
  return groupid_;
}
inline void GetGroupUsersRequest::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.GetGroupUsersRequest.groupid)
}

// -------------------------------------------------------------------

// UserInfo

// int32 id = 1;
inline void UserInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 UserInfo::id() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.UserInfo.id)
  return id_;
}
inline void UserInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ik_GroupServer.UserInfo.id)
}

// bytes name = 2;
inline void UserInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::name() const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.UserInfo.name)
  return name_.GetNoArena();
}
inline void UserInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_GroupServer.UserInfo.name)
}
#if LANG_CXX11
inline void UserInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ik_GroupServer.UserInfo.name)
}
#endif
inline void UserInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_GroupServer.UserInfo.name)
}
inline void UserInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_GroupServer.UserInfo.name)
}
inline ::std::string* UserInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ik_GroupServer.UserInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_name() {
  // @@protoc_insertion_point(field_release:ik_GroupServer.UserInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ik_GroupServer.UserInfo.name)
}

// -------------------------------------------------------------------

// GetGroupUsersResponse

// repeated .ik_GroupServer.UserInfo users = 1;
inline int GetGroupUsersResponse::users_size() const {
  return users_.size();
}
inline void GetGroupUsersResponse::clear_users() {
  users_.Clear();
}
inline ::ik_GroupServer::UserInfo* GetGroupUsersResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:ik_GroupServer.GetGroupUsersResponse.users)
  return users_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ik_GroupServer::UserInfo >*
GetGroupUsersResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:ik_GroupServer.GetGroupUsersResponse.users)
  return &users_;
}
inline const ::ik_GroupServer::UserInfo& GetGroupUsersResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:ik_GroupServer.GetGroupUsersResponse.users)
  return users_.Get(index);
}
inline ::ik_GroupServer::UserInfo* GetGroupUsersResponse::add_users() {
  // @@protoc_insertion_point(field_add:ik_GroupServer.GetGroupUsersResponse.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ik_GroupServer::UserInfo >&
GetGroupUsersResponse::users() const {
  // @@protoc_insertion_point(field_list:ik_GroupServer.GetGroupUsersResponse.users)
  return users_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ik_GroupServer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_GroupServer_2eproto
